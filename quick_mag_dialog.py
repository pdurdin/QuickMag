# -*- coding: utf-8 -*-
"""
/***************************************************************************
 QuickMagDialog
								 A QGIS plugin
 Parses ASC file and generates raster
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
							 -------------------
		begin				 : 2025-06-28
		git sha				 : $Format:%H$
		copyright			 : (C) 2025 by P Durdin
		email				 : pdurdin@gmail.com
 ***************************************************************************/

/***************************************************************************
 *																		   *
 *	 This program is free software; you can redistribute it and/or modify  *
 *	 it under the terms of the GNU General Public License as published by  *
 *	 the Free Software Foundation; either version 2 of the License, or	   *
 *	 (at your option) any later version.								   *
 *																		   *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets
from qgis.gui import QgsMapLayerComboBox

from qgis.core import QgsMessageLog

# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
	os.path.dirname(__file__), 'quick_mag_dialog_base.ui'))


class QuickMagDialog(QtWidgets.QDialog, FORM_CLASS):
	def __init__(self, parent=None):
		"""Constructor."""
		super(QuickMagDialog, self).__init__(parent)
		# Set up the user interface from Designer through FORM_CLASS.
		# After self.setupUi() you can access any designer object by doing
		# self.<objectname>, and you can use autoconnect slots - see
		# http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
		# #widgets-and-dialogs-with-auto-connect
		self.setModal(True)
		self.setupUi(self)
		self.setFixedSize(self.size())
		self.quickMagClose.clicked.connect(self.hideDialog)
		self.quickMagRasterLayerCombo.currentIndexChanged.connect(self.populateRasterFieldCombo)
	
	def populateRasterFieldCombo(self):
		self.quickMagRasterFieldCombo.clear()
		layer = self.quickMagRasterLayerCombo.currentLayer()
		if layer is not None:
			self.quickMagRasterFieldCombo.addItems(layer.fields().names())
			
		
	def hideDialog(self):
		# reset progress message
		self.quickMagProgressLabel.setText("Select an ASC file to process")
		self.setResult(self.DialogCode.Rejected)
		self.hide()